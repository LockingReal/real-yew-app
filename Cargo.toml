[package]
name = "rust-yew-todo"
version = "0.1.0"
authors = ["bradhe <bradhe@tencent.com>"]
edition = "2018"

[package.metadata.commands]
build = "wasm-pack build --target web --out-name wasm --out-dir ./docs"
serve = "http-server docs/"
start = "cargo cmd build && cargo cmd serve"
watch = "nodemon -w src/ -e .rs --exec 'cargo cmd start'"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
yew = "0.17.3"
chrono = { version = "0.4.10", features = ["serde"] }
dotenv_codegen = "0.15.0"
lazy_static = "1.4.0"
log = "0.4.8"
parking_lot = "0.10.0"
pulldown-cmark = "0.6.1"
serde = "1.0.104"
serde_json = "1.0.44"
thiserror = "1"
yew-router = { version="0.14.0", features = ["web_sys"] }
wasm-logger = "0.2.0"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "0.3"
features = [
  "Document",
  "Element",
  "Node",
  "Window",
  "HtmlCollection",
]


[dev-dependencies]
wasm-bindgen-test = "0.3.13"
js-sys = "0.3.37"
wasm-bindgen-futures = "0.4.10"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
